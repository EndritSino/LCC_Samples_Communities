{"version":3,"sources":["reducers/cart.js","constants/ActionTypes.js","reducers/products.js","reducers/buttons.js","reducers/index.js","api/shop.js","actions/index.js","components/Product.js","components/ProductItem.js","components/ProductsList.js","containers/Buttons.js","containers/ProductsContainer.js","components/Payment.js","components/Cart.js","containers/CartContainer.js","containers/AppContainer.js","containers/ReceiptContainer.js","containers/App.js","index.js"],"names":["initialState","addedIds","quantityById","cart","state","arguments","length","undefined","action","console","log","type","indexOf","productId","Object","toConsumableArray","concat","objectSpread","defineProperty","reducers_products","combineReducers","byId","products","reduce","obj","product","id","inventory","visibleIds","map","getProduct","getVisibleProducts","homeActive","cartActive","productsActive","receiptActive","cartState","productsState","receiptState","buttons","getAddedIds","fromCart","getQuantity","fromProducts","shop","cb","LCC","result","event","status","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","item","value","price","price__c","quantity__c","title","title__c","img","img__c","err","return","message","where","escape","saleItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","i","quantity","push","Shoe__c","Id","addToCart","dispatch","getState","addToCartUnsafe","Product","_ref","react_default","a","createElement","className","src","ProductItem","onAddToCartClicked","components_Product","onClick","disabled","ProductsList","children","connect","goToCart","goToProducts","active","getProductsActive","containers_Buttons","components_ProductsList","components_ProductItem","key","Payment","objectDestructuringEmpty","react_credit_cards_es","number","name","expiry","cvc","placeholder","Cart","total","onCheckoutClicked","hasProducts","nodes","parseFloat","toFixed","components_Payment","getCartActive","getCartProducts","getTotal","checkout","components_Cart","getHomeActive","getReceiptActive","slice","App","containers_AppContainer","containers_ProductsContainer","containers_CartContainer","containers_ReceiptContainer","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","receiveProducts","render","react_redux_es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.0e3a6f93.chunk.js","sourcesContent":["import {\n  ADD_TO_CART,\n  CHECKOUT_REQUEST,\n  CHECKOUT_FAILURE\n} from '../constants/ActionTypes'\n\nconst initialState = {\n  addedIds: [],\n  quantityById: {}\n}\n\nconst addedIds = (state = initialState.addedIds, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      if (state.indexOf(action.productId) !== -1) {\n        return state\n      }\n      return [ ...state, action.productId ]\n    default:\n      return state\n  }\n}\n\nconst quantityById = (state = initialState.quantityById, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const { productId } = action\n      return { ...state,\n        [productId]: (state[productId] || 0) + 1\n      }\n    default:\n      return state\n  }\n}\n\nexport const getQuantity = (state, productId) =>\n  state.quantityById[productId] || 0\n\nexport const getAddedIds = state => state.addedIds\n\nconst cart = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case CHECKOUT_REQUEST:\n      return initialState\n    case CHECKOUT_FAILURE:\n      return action.cart\n    default:\n      return {\n        addedIds: addedIds(state.addedIds, action),\n        quantityById: quantityById(state.quantityById, action)\n      }\n  }\n}\n\nexport default cart\n","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'\nexport const GO_TO_CART = 'GO_TO_CART'\nexport const GO_TO_PRODUCTS = 'GO_TO_PRODUCTS'\n","import { combineReducers } from 'redux'\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../constants/ActionTypes'\n\nconst products = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        inventory: state.inventory - 1\n      }\n    default:\n      return state\n  }\n}\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return {\n        ...state,\n        ...action.products.reduce((obj, product) => {\n          obj[product.id] = product\n          return obj\n        }, {})\n      }\n    default:\n      const { productId } = action\n      if (productId) {\n        return {\n          ...state,\n          [productId]: products(state[productId], action)\n        }\n      }\n      return state\n  }\n}\n\nconst visibleIds = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return action.products.map(product => product.id)\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  byId,\n  visibleIds\n})\n\nexport const getProduct = (state, id) =>\n  state.byId[id]\n\nexport const getVisibleProducts = state =>\n  state.visibleIds.map(id => getProduct(state, id))\n","import {\n  GO_TO_CART, GO_TO_PRODUCTS, CHECKOUT_SUCCESS\n} from '../constants/ActionTypes'\n\nconst initialState = {\n  homeActive: 1,\n  cartActive: 0,\n  productsActive: 0,\n  receiptActive: 0\n}\n\nconst cartState = {\n  homeActive: 0,\n  cartActive: 1,\n  productsActive: 0,\n  receiptActive: 0\n}\n\nconst productsState = {\n  homeActive: 0,\n  cartActive: 0,\n  productsActive: 1,\n  receiptActive: 0\n}\n\nconst receiptState = {\n  homeActive: 0,\n  cartActive: 0,\n  productsActive: 0,\n  receiptActive: 1\n}\n\nconst buttons = (state = initialState, action) => {\n  switch (action.type) {\n    case GO_TO_CART:\n      return cartState;\n    case GO_TO_PRODUCTS:\n      return productsState;\n    case CHECKOUT_SUCCESS:\n      return receiptState;\n    default:\n      return state;\n  }\n}\n\nexport default buttons\n","import { combineReducers } from 'redux'\nimport cart, * as fromCart from './cart'\nimport products, * as fromProducts from './products'\nimport buttons from './buttons'\n\n\nexport default combineReducers({\n  cart,\n  products,\n  buttons\n})\n\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\n\nexport const getTotal = state =>\n  getAddedIds(state)\n    .reduce((total, id) =>\n      total + getProduct(state, id).price * getQuantity(state, id),\n      0\n    )\n    .toFixed(2)\n\nexport const getCartProducts = state =>\n  getAddedIds(state).map(id => ({\n    ...getProduct(state, id),\n    quantity: getQuantity(state, id)\n  }))\n\nexport const getCartActive = state => state.buttons.cartActive\n\nexport const getProductsActive = state => state.buttons.productsActive\n\nexport const getReceiptActive = state => state.buttons.receiptActive\n\nexport const getHomeActive = state => state.buttons.homeActive\n","/**\n * Using Salesforce as our API.\n */\nimport * as LCC from 'lightning-container'\n\nexport default {\n  getProducts: function (cb) {\n    console.log(\"Fetching shoes inventory from salesforce.\");\n    LCC.callApex(\"DemoController.getShoes\",\n      (result, event) => {\n        if (event.status) {\n\n          //Turn shoes into products.\n          let id = 1;\n          for (let item of result) {\n            item.price = item.price__c;\n            item.inventory = item.quantity__c;\n            item.title = item.title__c;\n            item.img = item.img__c;\n            item.id = id;\n            id = id + 1;\n          }\n\n          console.log(result);\n          cb(result);\n        } else if (event.type === \"exception\") {\n          console.log(event.message + \" : \" + event.where);\n        }\n\n      },\n      { escape: true });\n  },\n  buyProducts: function (products, cb) {\n    console.log(\"Logging sale in salesforce.\");\n\n    //Turn products back to shoes.\n    console.log(products);\n    let saleItems = [];\n    for (let item of products) {\n      for (let i = 0; i < item.quantity; i++) {\n        saleItems.push({\"Shoe__c\": item.Id});\n      }\n    }\n\n    console.log(saleItems);\n    LCC.callApex(\"DemoController.makeSale\",\n      saleItems,\n      (result, event) => {\n        if (event.status) {\n          console.log(result);\n          cb(result);\n        } else if (event.type === \"exception\") {\n          console.log(event.message + \" : \" + event.where);\n        }\n\n      },\n      { escape: true });\n  },\n}\n","import shop from '../api/shop'\nimport * as types from '../constants/ActionTypes'\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n})\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products))\n  })\n}\n\nconst addToCartUnsafe = productId => ({\n  type: types.ADD_TO_CART,\n  productId\n})\n\nexport const goToCart = () => dispatch => {\n  dispatch({ \n    type: types.GO_TO_CART,  \n  });\n}\n\nexport const goToProducts = () => dispatch => {\n  dispatch({ \n    type: types.GO_TO_PRODUCTS\n  })\n}\n\nexport const addToCart = productId => (dispatch, getState) => {\n  if (getState().products.byId[productId].inventory > 0) {\n    dispatch(addToCartUnsafe(productId))\n  }\n}\n\nexport const checkout = products => (dispatch, getState) => {\n  const { cart } = getState()\n\n  dispatch({\n    type: types.CHECKOUT_REQUEST\n  })\n  shop.buyProducts(products, () => {\n    dispatch({\n      type: types.CHECKOUT_SUCCESS,\n      cart\n    })\n    // Replace the line above with line below to rollback on failure:\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\n  })\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Product = ({ price, quantity, title, img, message }) => (\n  <div className=\"w-100\">\n    <div className=\"product-image\">\n      <img src={\"./images/\" + `${img}` + \".jpg\"} />\n    </div>\n    <div className=\"product-info\">\n      <h3 className=\"h-120\">{title}</h3>\n      <h6>&#36;{price}.00</h6>\n      <h6>{quantity ? ` ${quantity} ${message}` : null}</h6>\n    </div>\n  </div>\n)\n\nProduct.propTypes = {\n  price: PropTypes.number,\n  quantity: PropTypes.number,\n  title: PropTypes.string\n}\n\nexport default Product\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Product from './Product'\n\nconst ProductItem = ({ product, onAddToCartClicked }) => (\n  <div className=\"product-card\">\n    <div className=\"w-100\">\n      <Product\n        title={product.title}\n        price={product.price}\n        quantity={product.inventory} \n        img={product.img}\n        message=\"Left in stock!\" />\n  <button className={product.inventory > 0 ? 'btn btn-primary' : 'btn btn-danger'}\n        onClick={onAddToCartClicked}\n        disabled={product.inventory > 0 ? '' : 'disabled'}>\n        {product.inventory > 0 ? 'Add to cart' : 'Sold Out'}\n      </button>\n    </div>\n  </div>\n)\n\nProductItem.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  }).isRequired,\n  onAddToCartClicked: PropTypes.func.isRequired\n}\n\nexport default ProductItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProductsList = ({ children }) => (\n  <div>\n    <div className=\"flex\">{children}</div>\n  </div>\n)\n\nProductsList.propTypes = {\n  children: PropTypes.node\n}\n\nexport default ProductsList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { goToCart, goToProducts } from '../actions'\n\nconst Buttons = ({ goToCart, goToProducts }) => (\n    <div>\n        <button className=\"btn btn-info btn-lg margin-right-small\" onClick={goToProducts}>\n            <span>Products</span>\n        </button>\n\n        <button className=\"btn btn-info btn-lg\" onClick={goToCart}>\n            <span className=\"glyphicon glyphicon-shopping-cart\"></span><span> Shopping Cart</span>\n        </button>\n    </div>\n)\n\nButtons.propTypes = {\n    goToCart: PropTypes.func.isRequired,\n    goToProducts: PropTypes.func.isRequired\n}\n\nexport default connect(\n    null, { goToCart, goToProducts }\n)(Buttons)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addToCart } from '../actions'\nimport { getProductsActive } from '../reducers'\nimport { getVisibleProducts } from '../reducers/products'\nimport ProductItem from '../components/ProductItem'\nimport ProductsList from '../components/ProductsList'\nimport Buttons from './Buttons'\n\nconst ProductsContainer = ({ active, products, addToCart }) => (\n  <div className={active > 0 ? '' : 'hide'}>\n\n    <div className=\"flex\">\n      <div className=\"flex-grow margin-left-small header\"><h2>SHOP ALL SHOES</h2></div>\n      <div className=\"margin-right-small margin-top-small\"><Buttons /></div>\n    </div>\n\n    <div className=\"flex\">\n      <div className=\"fake-left-panel\" />\n      <div className=\"flex-grow make-room\" >\n        <ProductsList>\n          {products.map(product =>\n            <ProductItem\n              key={product.id}\n              product={product}\n              onAddToCartClicked={() => addToCart(product.id)} />\n          )}\n        </ProductsList>\n      </div>\n    </div>\n  </div>\n)\n\nProductsContainer.propTypes = {\n  active: PropTypes.number.isRequired,\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  })).isRequired,\n  addToCart: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  active: getProductsActive(state),\n  products: getVisibleProducts(state.products)\n})\n\nexport default connect(\n  mapStateToProps,\n  { addToCart }\n)(ProductsContainer)\n","import React from 'react'\nimport Cards from 'react-credit-cards';\nimport 'react-credit-cards/es/styles-compiled.css';\n\nconst Payment = ({ }) => {\n  return (\n    <div className=\"flex bordered padding\">\n      <div className=\"flex-grow\" />\n      <div className=\"margin-left-small margin-right-small flex flex-30\">\n        <Cards\n          number=\"1234567891234567\"\n          name=\"John Doe\"\n          expiry=\"10/22\"\n          cvc=\"1234\"\n        />\n      </div>\n      <div className=\"margin-left-small margin-right-small flex flex-30\">\n        <form className=\"w-100\">\n          <div>\n            <input\n              className=\"padding w-100\"\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Card Number\"\n            />\n          </div>\n          <div>\n            <input\n              className=\"padding w-100\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n            />\n          </div>\n          <div>\n            <input\n              className=\"padding w-100\"\n              type=\"tel\"\n              name=\"expiry\"\n              placeholder=\"Valid Thru\"\n            />\n          </div>\n          <div>\n            <input\n              className=\"padding w-100\"\n              type=\"tel\"\n              name=\"cvc\"\n              placeholder=\"CVC\"\n            />\n          </div>\n        </form>\n      </div>\n      <div className=\"flex-grow\" />\n    </div>\n  )\n}\n\nexport default Payment\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Product from './Product'\nimport Payment from './Payment'\n\nconst Cart = ({ products, total, onCheckoutClicked }) => {\n  const hasProducts = products.length > 0\n  const nodes = hasProducts ? (\n    products.map(product =>\n      <div className=\"product-card-no-grow flex-center\">\n        <Product\n          title={product.title}\n          price={product.price}\n          quantity={product.quantity}\n          img={product.img}\n          message=\"in cart.\"\n          key={product.id}\n        />\n      </div>\n    )\n  ) : (<em>Please add some products to cart.</em>)\n\n  return (\n    <div className=\"margin-left-small\">\n      <div className=\"flex-no-wrap padding\">\n        <div className=\"padding flex\">\n          {nodes}\n        </div>\n        <div className=\"padding bordered w-100\">\n          <div className=\"flex w-100\">\n            <span className=\"padding\"><b>Subotal</b></span>\n            <span className=\"padding flex-grow\"></span>\n            <span className=\"padding\">&#36;{parseFloat(total).toFixed(2)}</span>\n          </div >\n          <div className=\"flex w-100 border-top\">\n            <span className=\"padding\"><b>Tax</b></span>\n            <span className=\"padding flex-grow\"></span>\n            <span className=\"padding\">&#36;{parseFloat(total / 10).toFixed(2)}</span>\n          </div>\n          <div className=\"flex w-100\">\n            <span className=\"padding\"><b>Shipping</b></span>\n            <span className=\"padding flex-grow\"></span>\n            <span className=\"padding\">&#36;{parseFloat(total / 10).toFixed(2)}</span>\n          </div>\n          <div className=\"flex w-100 border-top\">\n            <span className=\"padding\"><b>Final Total</b></span>\n            <span className=\"padding flex-grow\"></span>\n            <span className=\"padding\">&#36;{parseFloat(total * 1.2).toFixed(2)}</span>\n          </div>\n          <br />\n        </div>\n      </div>\n      <div className=\"checkout-container padding\">\n        <Payment></Payment>\n        <div className=\"flex padding bordered\">\n          <div className=\"flex-grow\" />\n          <button className='btn btn-primary wide' onClick={onCheckoutClicked}\n            disabled={hasProducts ? '' : 'disabled'}>\n            Place your order.\n          </button>\n          <div className=\"flex-grow\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nCart.propTypes = {\n  products: PropTypes.array,\n  total: PropTypes.string,\n  onCheckoutClicked: PropTypes.func\n}\n\nexport default Cart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { checkout } from '../actions'\nimport { getTotal, getCartActive, getCartProducts } from '../reducers'\nimport Cart from '../components/Cart'\nimport Buttons from './Buttons'\n\nconst CartContainer = ({ active, products, total, checkout }) => (\n  <div className={active > 0 ? '' : 'hide'}>\n    <div className=\"flex\">\n      <div className=\"flex flex-grow margin-left-small header\"><h2>Your Cart</h2></div>\n     <div className=\"margin-right-small margin-top-small\"><Buttons /></div>\n    </div>\n    <Cart\n      products={products}\n      total={total}\n      onCheckoutClicked={() => checkout(products)} />\n  </div>\n)\n\nCartContainer.propTypes = {\n  active: PropTypes.number.isRequired,\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired,\n  total: PropTypes.string,\n  checkout: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  active: getCartActive(state),\n  products: getCartProducts(state),\n  total: getTotal(state)\n})\n\nexport default connect(\n  mapStateToProps,\n  { checkout }\n)(CartContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getHomeActive } from '../reducers'\nimport Buttons from './Buttons'\n\nconst AppContainer = ({ active }) => (\n    <div className={active > 0 ? 'appHome' : 'hide'}>\n        <div className=\"flex\">\n            <div className=\"flex flex-grow margin-left-small detail\"><h2>A react shopping cart based on salesforce product data.</h2></div>\n            <div className=\"margin-right-small margin-top-small\"><Buttons /></div>\n        </div>\n    </div>\n)\n\nAppContainer.propTypes = {\n    active: PropTypes.number.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    active: getHomeActive(state)\n})\n\nexport default connect(\n    mapStateToProps,\n    {}\n)(AppContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getVisibleProducts } from '../reducers/products'\nimport { getReceiptActive } from '../reducers'\nimport { addToCart } from '../actions'\nimport ProductItem from '../components/ProductItem'\nimport ProductsList from '../components/ProductsList'\nimport Buttons from './Buttons'\n\nconst ReceiptContainer = ({ active, products, addToCart }) => (\n  <div className={active > 0 ? '' : 'hide'}>\n    <div className=\"flex\">\n      <div className=\"flex flex-grow margin-left-small header\"><h2>Thank you for your purchase.</h2></div>\n      <div className=\"margin-right-small margin-top-small\"><Buttons /></div>\n    </div>\n    <br />\n    <div className=\"padding\">\n      <div>\n        You'll receive an e-mail confirmation of your order shortly.\n    </div>\n      <br />\n\n      <div>\n        Not done yet?  Try out these hot new items!\n    </div>\n      <br />\n\n      <div className=\"flex\">\n        <div className=\"flex-grow\">\n          <ProductsList>\n            {products.slice(0, 4).map(product =>\n              <ProductItem\n                key={product.id}\n                product={product}\n                onAddToCartClicked={() => addToCart(product.id)} />\n            )}\n          </ProductsList>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nReceiptContainer.propTypes = {\n  active: PropTypes.number.isRequired,\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired,\n  addToCart: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  active: getReceiptActive(state),\n  products: getVisibleProducts(state.products)\n})\n\nexport default connect(\n  mapStateToProps,\n  { addToCart }\n)(ReceiptContainer)\n","import React from 'react'\nimport ProductsContainer from './ProductsContainer'\nimport CartContainer from './CartContainer'\nimport AppContainer from './AppContainer'\nimport ReceiptContainer from './ReceiptContainer'\nimport '../styles/App.css';\n\nconst App = () => (\n  <div>\n    <div>\n      <AppContainer />\n    </div>\n\n    <div>\n      <ProductsContainer />\n    </div>\n\n    <div>\n      <CartContainer />\n    </div>\n\n    <div>\n      <ReceiptContainer />\n    </div>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\nimport { getAllProducts } from './actions'\nimport App from './containers/App'\n\nconst middleware = [ thunk ];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware)\n)\n\nstore.dispatch(getAllProducts())\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}